{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "Contacts API",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "API for contact management with authorization, password reset, and photo upload (Cloudinary).\n"
  },
  "servers": [
    {
      "url": "https://nodejs-hw-mongodb-7-59qt.onrender.com",
      "description": "Production"
    },
    {
      "url": "http://localhost:3000",
      "description": "Local"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization and password recovery"
    },
    {
      "name": "Contacts",
      "description": "Contact operations"
    }
  ],
  "paths": {
    "/contacts": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Get the current user's contact list",
        "operationId": "listContacts",
        "description": "Returns only contacts belonging to the authorized user.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            },
            "description": "Page number (pagination)"
          },
          {
            "in": "query",
            "name": "perPage",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 10
            },
            "description": "Number of elements per page"
          },
          {
            "in": "query",
            "name": "sortBy",
            "schema": {
              "type": "string",
              "enum": [
                "name",
                "email",
                "phoneNumber",
                "contactType",
                "isFavourite",
                "createdAt",
                "updatedAt"
              ]
            },
            "description": "Sort field"
          },
          {
            "in": "query",
            "name": "sortOrder",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "asc"
            },
            "description": "Sort direction"
          },
          {
            "in": "query",
            "name": "contactType",
            "schema": {
              "type": "string",
              "enum": [
                "home",
                "work",
                "other"
              ]
            },
            "description": "Filter by contact type"
          },
          {
            "in": "query",
            "name": "isFavourite",
            "schema": {
              "type": "boolean"
            },
            "description": "Filter by favorite contacts"
          }
        ],
        "responses": {
          "200": {
            "description": "Contact list in pagination",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CommonResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "message": {
                          "example": "Contacts fetched successfully"
                        },
                        "data": {
                          "$ref": "#/components/schemas/PaginatedContacts"
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "ok": {
                    "value": {
                      "status": 200,
                      "message": "Contacts fetched successfully",
                      "data": {
                        "items": [
                          {
                            "_id": "68e6eaeb61b8a6f48903a256",
                            "name": "John Doe",
                            "phoneNumber": "+380501112233",
                            "email": "john.doe@example.com",
                            "contactType": "work",
                            "isFavourite": false,
                            "photo": null,
                            "userId": "66c0c1c7e9c2f6b2d1a9f123",
                            "createdAt": "2025-10-08T14:39:20.123Z",
                            "updatedAt": "2025-10-08T14:39:20.123Z"
                          }
                        ],
                        "meta": {
                          "page": 1,
                          "perPage": 10,
                          "totalItems": 37,
                          "totalPages": 4,
                          "hasNextPage": true,
                          "hasPrevPage": false,
                          "nextPage": 2,
                          "prevPage": null
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "post": {
        "tags": [
          "Contacts"
        ],
        "summary": "Create a new contact",
        "operationId": "createContact",
        "description": "Data is transmitted in the format multipart/form-data.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "phoneNumber",
                  "email",
                  "contactType",
                  "isFavourite"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "phoneNumber": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "contactType": {
                    "type": "string",
                    "enum": [
                      "work",
                      "home",
                      "personal"
                    ]
                  },
                  "isFavourite": {
                    "type": "boolean"
                  },
                  "photo": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Envelope"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "integer",
                          "example": 201
                        },
                        "message": {
                          "type": "string",
                          "example": "Contact created successfully"
                        },
                        "data": {
                          "$ref": "#/components/schemas/Contact"
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "created": {
                    "value": {
                      "status": 201,
                      "message": "Contact created successfully",
                      "data": {
                        "_id": "68e6eaeb61b8a6f48903a256",
                        "name": "John Doe",
                        "phoneNumber": "+380501112233",
                        "email": "john.doe@example.com",
                        "contactType": "work",
                        "isFavourite": false,
                        "photo": "https://res.cloudinary.com/demo/image/upload/photo.jpg",
                        "userId": "66c0c1c7e9c2f6b2d1a9f123",
                        "createdAt": "2025-10-08T14:39:20.123Z",
                        "updatedAt": "2025-10-08T14:39:20.123Z"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestEnvelope"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/contacts/{contactId}": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Get contact by ID",
        "operationId": "getContactById",
        "description": "Returns the user's contact by ObjectId.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ContactId"
          }
        ],
        "responses": {
          "200": {
            "description": "Contact found",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CommonResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "contact": {
                              "$ref": "#/components/schemas/Contact"
                            }
                          },
                          "required": [
                            "contact"
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "patch": {
        "tags": [
          "Contacts"
        ],
        "summary": "Update contact (fields and/or photo)",
        "operationId": "updateContact",
        "description": "The update supports multipart/form-data; any fields are optional.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ContactId"
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ContactUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contact"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "delete": {
        "tags": [
          "Contacts"
        ],
        "summary": "Delete Contact",
        "operationId": "deleteContact",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/ContactId"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Login user",
        "operationId": "loginUser",
        "description": "Authenticates user, creates session and returns access token.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully logged in",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthTokens"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "description": "Student not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 404
                    },
                    "message": {
                      "type": "string",
                      "example": "Student not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Register user",
        "operationId": "register",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "email",
                  "password"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/auth/refresh": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Refresh session (via refresh cookie)",
        "operationId": "refresh",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthTokens"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Logout (cancel session)",
        "operationId": "logout",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/auth/send-reset-email": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Send password reset email",
        "operationId": "sendResetEmail",
        "description": "Sends a reset link (JWT 5 min) to user's email using SMTP (Brevo).",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Reset password email has been successfully sent."
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "description": "SMTP send Error"
          }
        }
      }
    },
    "/auth/reset-pwd": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Reset password",
        "operationId": "resetPassword",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "token",
                  "password"
                ],
                "properties": {
                  "token": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string",
                    "minLength": 6
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password reset"
          },
          "401": {
            "description": "Token is expired or invalid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "Contact": {
        "type": "object",
        "required": [
          "_id",
          "name",
          "email",
          "phoneNumber",
          "contactType",
          "isFavourite",
          "userId",
          "photo",
          "createdAt",
          "updatedAt"
        ],
        "properties": {
          "_id": {
            "type": "string",
            "description": "Contact id",
            "example": "68e6eaeb61b8a6f48903a256"
          },
          "name": {
            "type": "string",
            "description": "Contact name",
            "example": "John Doe"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "john.doe@example.com"
          },
          "phoneNumber": {
            "type": "string",
            "description": "Contact number",
            "example": "+380501112233"
          },
          "contactType": {
            "type": "string",
            "enum": [
              "home",
              "work",
              "personal",
              "other"
            ],
            "example": "work"
          },
          "isFavourite": {
            "type": "boolean",
            "example": true
          },
          "photo": {
            "type": "string",
            "description": "Contact photo",
            "example": "https://res.cloudinary.com/demo/image/upload/v1720000000/photo.jpg"
          },
          "userId": {
            "type": "string",
            "example": "68e6eaeb61b8a6f48903a200"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-10-08T18:21:10.157+00:00"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-10-08T18:21:10.157+00:00"
          }
        }
      },
      "ContactCreate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Alice"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "alice@example.com"
          },
          "phoneNumber": {
            "type": "string",
            "example": "+380501234567"
          },
          "contactType": {
            "type": "string",
            "enum": [
              "home",
              "work",
              "personal",
              "other"
            ],
            "example": "work"
          },
          "isFavourite": {
            "type": "boolean",
            "example": false
          },
          "photo": {
            "type": "string",
            "format": "binary",
            "description": "Photo file (multipart/form-data)"
          }
        },
        "required": [
          "name",
          "email",
          "phoneNumber",
          "contactType"
        ]
      },
      "ContactUpdate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "phoneNumber": {
            "type": "string"
          },
          "contactType": {
            "type": "string",
            "enum": [
              "home",
              "work",
              "personal",
              "other"
            ]
          },
          "isFavourite": {
            "type": "boolean"
          },
          "photo": {
            "type": "string",
            "format": "binary",
            "description": "New photo file (multipart/form-data)"
          }
        }
      },
      "ContactsList": {
        "$ref": "#/components/schemas/PaginationMeta"
      },
      "Error": {
        "description": "Not found",
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "example": 404
          },
          "message": {
            "type": "string",
            "example": "Not found"
          },
          "data": {
            "type": "object",
            "example": {}
          }
        },
        "required": [
          "status",
          "message"
        ]
      },
      "AuthTokens": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "example": "eyJhbGciOi..."
          }
        },
        "required": [
          "accessToken"
        ]
      },
      "CommonResponse": {
        "type": "object",
        "required": [
          "status",
          "message",
          "data"
        ],
        "properties": {
          "status": {
            "type": "integer",
            "example": 200
          },
          "message": {
            "type": "string",
            "example": "OK"
          },
          "data": {
            "type": "object",
            "additionalProperties": true
          }
        }
      },
      "PaginationMeta": {
        "type": "object",
        "required": [
          "items",
          "page",
          "perPage",
          "totalItems",
          "totalPages",
          "hasNextPage",
          "hasPrevPage"
        ],
        "properties": {
          "page": {
            "type": "integer",
            "example": 1
          },
          "perPage": {
            "type": "integer",
            "example": 10
          },
          "totalItems": {
            "type": "integer",
            "example": 42
          },
          "totalPages": {
            "type": "integer",
            "example": 5
          },
          "hasNextPage": {
            "type": "boolean",
            "example": true
          },
          "hasPrevPage": {
            "type": "boolean",
            "example": false
          },
          "nextPage": {
            "type": [
              "integer",
              "null"
            ],
            "example": 2
          },
          "prevPage": {
            "type": [
              "integer",
              "null"
            ],
            "example": null
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Contact"
            }
          }
        }
      },
      "PaginatedContacts": {
        "type": "object",
        "required": [
          "items",
          "meta"
        ],
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Contact"
            }
          },
          "meta": {
            "$ref": "#/components/schemas/PaginationMeta"
          }
        }
      },
      "Envelope": {
        "type": "object",
        "required": [
          "status",
          "message",
          "data"
        ],
        "properties": {
          "status": {
            "type": "integer",
            "example": 200
          },
          "message": {
            "type": "string",
            "example": "OK"
          },
          "data": {
            "description": "Response payload"
          }
        }
      },
      "BadRequestEnvelope": {
        "type": "object",
        "required": [
          "status",
          "message",
          "data"
        ],
        "properties": {
          "status": {
            "type": "integer",
            "example": 400
          },
          "message": {
            "type": "string",
            "example": "Bad Request"
          },
          "data": {
            "type": "null",
            "example": null
          }
        }
      }
    },
    "parameters": {
      "ContactId": {
        "name": "contactId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "pattern": "^[0-9a-fA-F]{24}$"
        },
        "example": "68e6eaeb61b8a6f48903a256",
        "description": "Mongo ObjectId contacts"
      },
      "Page": {
        "name": "page",
        "in": "query",
        "schema": {
          "type": "integer",
          "minimum": 1,
          "default": 1
        },
        "description": "page number"
      },
      "PerPage": {
        "name": "perPage",
        "in": "query",
        "schema": {
          "type": "integer",
          "minimum": 1,
          "maximum": 100,
          "default": 10
        },
        "description": "the number of elements on the page"
      },
      "IsFavourite": {
        "name": "isFavourite",
        "in": "query",
        "schema": {
          "type": "boolean"
        },
        "description": "filter by favorites"
      },
      "ContactType": {
        "name": "contactType",
        "in": "query",
        "schema": {
          "type": "string",
          "enum": [
            "home",
            "work",
            "personal",
            "other"
          ]
        },
        "description": "Filter by contact type"
      }
    },
    "responses": {
      "401": {
        "description": "Unauthorized",
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Envelope"
                },
                {
                  "type": "object",
                  "properties": {
                    "status": {
                      "example": 401
                    },
                    "message": {
                      "example": "Unauthorized"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              ]
            }
          }
        }
      },
      "500": {
        "description": "Internal Server Error",
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Envelope"
                },
                {
                  "type": "object",
                  "properties": {
                    "status": {
                      "example": 500
                    },
                    "message": {
                      "example": "Internal Server Error"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              ]
            }
          }
        }
      },
      "NotFound": {
        "description": "Not found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "Unauthorized": {
        "description": "Unauthorized",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      }
    }
  }
}